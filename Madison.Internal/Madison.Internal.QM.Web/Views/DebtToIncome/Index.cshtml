@model Madison.Internal.QM.Web.Models.DebtIncome

@{
    ViewBag.Title = "Debt To Income Evaluation";
}

<h2>Debt To Income Ratio Evaluation</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

      <div id="slides">
        <div class="slides-container">
            <div id="1" class="container">
            <fieldset>
                <legend></legend>
                <p style="width: 590px; font-size: small">
                    Please complete the questions below for a quick initial evaluation of debt to income ratio.
                    This is not a lender or underwriting approval. This is merely a data collection screen
                    recommended for you prior to using Q-MAT.
                </p>
                <p style="width: 590px; font-size: small">
                    This screen is intended only as a self evaluation tool to determine, with your expertise,
                    if we can proceed with the affiliate and title insurance evaluations. 
                </p>
                <p style="width: 590px; font-size: small">
                    Please complete the screen below fully and to the best degree possible for optimal results. 
                </p>
                <p style="width: 590px; font-size: small">
                    <i>*This data is not collected, stored, or guaranteed. This is a self evaluation tool.</i>
                </p>
                <br />
@*                <div class="editor-label" style="font-weight: bold">Income Assumptions</div><br />*@
                <div class="editor-label" style="font-weight: bold">
                    What is the borrowers expected monthly income?
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.MonthlyIncome, new { id = "monthlyIncome" })
                    @Html.ValidationMessageFor(model => model.MonthlyIncome)
                </div>
@*                <br />*@
@*                <div class="editor-label" style="font-weight: bold">Employment Status Assumptions</div><br />*@
                <div class="editor-label" style="font-weight: bold">
                    What is the borrower’s current employment status?
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.EmploymentStatusId, ViewBag.EmploymentStatus as SelectList, new { id="currentEmploymentStatus" })
                    @Html.ValidationMessageFor(model => model.EmploymentStatusId)
                </div>
                <div class="editor-label" style="font-weight: bold">
                    How long has the borrower been employed with their current company?
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.EmploymentLengthId, ViewBag.EmploymentLength as SelectList, new { id="currentEmploymentLength" })
                    @Html.ValidationMessageFor(model => model.EmploymentLengthId)
                </div>
                <div class="editor-label" style="font-weight: bold">
                    How long was the borrower employed with their prior company?
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.EmploymentLengthAtPriorCompanyId, ViewBag.EmploymentLength as SelectList, new { id="priorEmploymentLength" })
                    @Html.ValidationMessageFor(model => model.EmploymentLengthAtPriorCompanyId)
                </div>   
            </fieldset>
            </div>
            <div id="2" class="container">
                <fieldset>
                    <legend></legend>
                    <br />
@*                <div class="editor-label" style="font-weight: bold">Expected Monthly Payment</div><br />*@
                <div class="editor-label" style="font-weight: bold">
                    What is the Expected monthly payment required for this loan?
                </div>
                <div class="editor-field">
                   @Html.TextBoxFor(model => model.ExpectedMonthlyPayment, new { id = "expectedMonthlyPayment" })
                    @Html.ValidationMessageFor(model => model.ExpectedMonthlyPayment)
                </div>
                <br />
                <div class="editor-label" style="font-weight: bold">
                    Loan Requires PMI&nbsp;&nbsp;@Html.CheckBoxFor(model => model.RequiresPMI, new { id = "pmiCheckBox" })
                </div>
                <br />
                <div id="monthlyPMI">
                    <div class="editor-label" style="font-weight: bold">
                        What is the monthly PMI payment requirement?
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.ExpectedMonthlyPMI, new { id = "expectedMonthlyPMI" })
                        @Html.ValidationMessageFor(model => model.ExpectedMonthlyPMI)
                    </div>
                </div>
                <br />
@*                <div class="editor-label" style="font-weight: bold">Additional Loan Payments</div><br />*@
                <div class="editor-label" style="font-weight: bold">
                    There are additional loans on the property&nbsp;&nbsp;@Html.CheckBoxFor(model => model.AdditionalLoansOnProperty, new { id = "additionalLoansCheckBox" })
                </div>
                <br />
                <div id="additionalLoans">
                    <div class="editor-label" style="font-weight: bold">
                        What is the total monthly obligation of those loans?
                    </div>
                    <div class="editor-field">
                        @Html.TextBoxFor(model => model.TotalMontlyPaymentOfAdditionalLoans, new { id = "totalMontlyPaymentOfAdditionalLoans" })
                        @Html.ValidationMessageFor(model => model.TotalMontlyPaymentOfAdditionalLoans)
                    </div>
                </div>
                <br />
@*                <div class="editor-label" style="font-weight: bold">Existing debt obligations</div><br />*@
                <div class="editor-label" style="font-weight: bold">
                    Enter total amount per month of the borrowers other monthly debt obligations.<br /> 
                    (Remember to include child support and alimony.)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.MonthlyDebtObligation, new { id = "monthlyDebtObligation" })
                    @Html.ValidationMessageFor(model => model.MonthlyDebtObligation)
                </div>
                </fieldset>
            </div>
            <div id="3">
                <fieldset>
                    <legend></legend>
                    <h3>Results</h3>
                    <table>
                        <tr>
                            <td class="editor-label" style="font-weight: bold; width: 250px;">Monthly Income:&nbsp;</td>
                            <td><div id="totalMonthlyIncome"></div></td>
                        </tr>
                        <tr>
                            <td class="editor-label" style="font-weight: bold; width: 250px;">Debt Obligations:&nbsp;</td>
                            <td style="vertical-align: top"><div id="totalMonthlyDebt"></div></td>
                        </tr>
                        <tr>
                            <td class="editor-label" style="font-weight: bold; width: 250px;">Debt obligations, estimated monthly payment, and PMI:&nbsp;</td>
                            <td><div id="totalDebtPaymentsPMI"></div></td>
                        </tr>
                        <tr>
                            <td class="editor-label" style="font-weight: bold; width: 250px;">Debt to Income Percentage:&nbsp;</td>
                            <td><div id="actualDebtIncomePercentage" ></div></td>
                        </tr>
                    </table>
                </fieldset>
            </div>
        </div>
        <nav class="slides-navigation">
            <a id="previousSlide" href="#" class="btn btn-large btn-success prev">Previous</a>
            <a id="nextSlide" href="#" class="btn btn-large btn-success next">Next</a>
            <input type="button" id="startOver" class="btn btn-large btn-success" value="Start Over"/>
            <input type="submit" id="done" class="btn btn-large btn-success" value="Done"/>
        </nav>
    </div>
    
}

@section Scripts {
@*    @Scripts.Render("~/bundles/jqueryval")*@
    @Scripts.Render("~/Scripts/slider/jquery.easing.1.3.js")
    @Scripts.Render("~/Scripts/slider/jquery.animate-enhanced.min.js")
    @Scripts.Render("~/Scripts/slider/jquery.superslides.js")
    
    <script type="text/javascript">
        $(document).ready(function () {
            setFormControlVisibility();
            setFormEventHandlers();
            setNavEventHandlers();

            $('#done').click(function () {
                $('form').submit();
            });

            $('#slides').superslides({
                hashchange: true,
                pagination: false
            });
        });

        function calculateResults() {
            var income = $('#monthlyIncome').val();
            if (income == null || income == '') {
                income = 0;
            }
            $('#totalMonthlyIncome').text('$' + income);

            var debt = getDebt();
            $('#totalMonthlyDebt').text('$' + debt);

            var debtAndPaymentsandPMI = getDebtAndEstimatedPaymentsAndEstimatedPMI();
            $('#totalDebtPaymentsPMI').text('$' + debtAndPaymentsandPMI);

            var debtToIncomePercentage = getDebtToIncomePercentage(income, debtAndPaymentsandPMI);
            $('#actualDebtIncomePercentage').text(debtToIncomePercentage);
        }


        function getDebt() {
            var debt = 0;
            if ($('#monthlyDebtObligation').val() != null && $('#monthlyDebtObligation').val().length > 0) {
                debt = $('#monthlyDebtObligation').val() * 1;
            }

            if ($('#totalMontlyPaymentOfAdditionalLoans').val() != null && $('#totalMontlyPaymentOfAdditionalLoans').val().length > 0) {
                debt += $('#totalMontlyPaymentOfAdditionalLoans').val() * 1;
            }

            return debt;
        }

        function getDebtAndEstimatedPaymentsAndEstimatedPMI() {
            var debt = 0;
            if ($('#expectedMonthlyPayment').val() != null && $('#expectedMonthlyPayment').val().length > 0) {
                debt += $('#expectedMonthlyPayment').val() * 1;
            }

            if ($('#expectedMonthlyPMI').val() != null && $('#expectedMonthlyPMI').val().length > 0) {
                debt += $('#expectedMonthlyPMI').val() * 1;
            }

            debt += getDebt();

            return debt;
        }

        function getDebtToIncomePercentage(income, debt) {
            if ((debt * 1) == 0) {
                return '100%';
            }
            
            var debtToIncomePercentage = ((debt * 1) / (income * 1)) * 100;
            return debtToIncomePercentage + '%';
        }

        function setNavEventHandlers() {
            $('#previousSlide').click(prevSlideClick);
            $('#nextSlide').click(nextSlideClick);
            $('#startOver').click(startOver);
        }

        function setFormControlVisibility() {
            $('#monthlyPMI').hide();
            $('#additionalLoans').hide();
            $('#previousSlide').hide(); //default the previous slide button to not visible (they should only be able to move forward).
            $('#startOver').hide();
            $('#done').hide();
        }

        function prevSlideClick() {
            $('#nextSlide').show();
            $('#startOver').hide();
            $('#done').hide();
            if ($('#slides').superslides('current') == 1) {
                $('#previousSlide').hide();
            }
            else {
                $('#previousSlide').show();
            }
        }

        function nextSlideClick() {
            $('#previousSlide').show();
            if ($('#slides').superslides('current') == 1) {
                $('#nextSlide').hide();
                $('#startOver').show();
                $('#done').show();
                calculateResults();
            }
            else {
                $('#nextSlide').show();
                $('#startOver').hide();
                $('#done').hide();
            }
        }

        function startOver() {

            $('#slides').superslides('animate', 0);

            $('#previousSlide').hide();
            $('#startOver').hide();
            $('#done').hide();
            $('#nextSlide').show();

            $('#monthlyIncome').val('');
            $('#expectedMonthlyPayment').text = '';
            $('#pmiCheckBox').checked = 0;
            $('#expectedMonthlyPMI').text = ''
            $('#additionalLoansCheckBox').checked = 0
            $('#totalMontlyPaymentOfAdditionalLoans').text = ''
            $('#monthlyDebtObligation').text = ''
            $('#currentEmploymentLength').val('');
            $('#currentEmploymentStatus').val('');
            $('#priorEmploymentLength').val('');    
        }

        function setFormEventHandlers() {
            
            $("#pmiCheckBox").click(function () {
                setMonthlyPMIVisibility();
            });

            $('#additionalLoansCheckBox').click(function () {
                setAdditionalLoansVisibility();
            });
        }

        function setMonthlyPMIVisibility() {
            
            if ($("#pmiCheckBox").is(':checked')) {
                
                $('#monthlyPMI').show();
            }
            else {
                
                $('#monthlyPMI').hide();
            }
            
        }

        function setAdditionalLoansVisibility() {
            if ($('#additionalLoansCheckBox').is(':checked')) {
                $('#additionalLoans').show();
            }
            else {
                $('#additionalLoans').hide();
            }

            
        }
    </script>
}
